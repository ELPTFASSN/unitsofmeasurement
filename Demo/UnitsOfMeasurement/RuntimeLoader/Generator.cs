// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Demo.UnitsOfMeasurement
{
    using Man.UnitsOfMeasurement;
    using System;
    
    
    #line 1 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class Generator : GeneratorBase
    {
        public virtual string TransformText()
        {
            this.Write(@"/*******************************************************************************

    Units of Measurement for C# applications

    Copyright (C) Marek Aniola

    This program is provided to you under the terms of the license
    as published at https://github.com/mangh/unitsofmeasurement


********************************************************************************/
using System;

namespace ");
            
            #line 17 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(@__projectNamespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 19 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

    for(int i = __unitstartindex; i < __units.Count; i++)
    {
        ProcessUnit(__units[i]);
    }
    for(int i = __scalestartindex; i < __scales.Count; i++)
    {
        ProcessScale(__scales[i]);
    }

            
            #line default
            #line hidden
            this.Write("}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 31 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

    void ProcessUnit(UnitType u)
    {
        string Unit = u.Name;
        string Sense = u.Sense.Code;
        string Family = (u.Prime == null) ? (__family++).ToString() : String.Format("{0}.Family", u.FamilyPrime().Name);
        string Format = u.Format;
        string Tags = String.Format("\"{0}\"", String.Join("\", \"", u.Tags));
        
        string Factor = u.Factor.Code;
        string Value = u.Factor.Value.Type.Name;
        string One = u.Factor.Value.Type.One.CSString();
        string Zero = u.Factor.Value.Type.Zero.CSString();

        
        #line default
        #line hidden
        
        #line 44 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("    public partial struct ");

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" : IQuantity<");

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">, IEquatable<");

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">, IComparable<");

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">, IFormattable\r\n    {\r\n        #region Fields\r\n        private readonly ");

        
        #line default
        #line hidden
        
        #line 48 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 48 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" m_value;\r\n        #endregion\r\n\r\n        #region Properties\r\n        public ");

        
        #line default
        #line hidden
        
        #line 52 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 52 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" Value { get { return m_value; } }\r\n        #endregion\r\n\r\n        #region Constru" +
        "ctor(s)\r\n        public ");

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" value)\r\n        {\r\n            m_value = value;\r\n        }\r\n        #endregion\r\n" +
        "\r\n        #region Conversions\r\n        public static explicit operator ");

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(q); }\r\n");

        
        #line default
        #line hidden
        
        #line 64 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

        foreach (MeasureType s in u.Relatives())
        {
            string Relative = ((UnitType)s).Name;

        
        #line default
        #line hidden
        
        #line 68 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("        public static explicit operator ");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Relative));

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("((");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Factor / ");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Relative));

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Factor) * q.Value); }\r\n");

        
        #line default
        #line hidden
        
        #line 70 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

        }

        
        #line default
        #line hidden
        
        #line 72 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("        public static ");

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" From(IQuantity<");

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> q)\r\n        {\r\n            Unit<");

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> source = new Unit<");

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">(q);\r\n            if (source.Family != ");

        
        #line default
        #line hidden
        
        #line 76 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 76 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Family) throw new InvalidOperationException(String.Format(\"Cannot convert \\\"{0}\\" +
        "\" to \\\"");

        
        #line default
        #line hidden
        
        #line 76 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 76 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("\\\"\", q.GetType().Name));\r\n            return new ");

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("((");

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Factor / source.Factor) * q.Value);\r\n        }\r\n        #endregion\r\n\r\n        #r" +
        "egion IObject / IEquatable<");

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">\r\n        public override int GetHashCode() { return m_value.GetHashCode(); }\r\n " +
        "       public override bool /* IObject */ Equals(object obj) { return (obj is ");

        
        #line default
        #line hidden
        
        #line 83 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 83 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(") && Equals((");

        
        #line default
        #line hidden
        
        #line 83 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 83 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(")obj); }\r\n        public bool /* IEquatable<");

        
        #line default
        #line hidden
        
        #line 84 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 84 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> */ Equals(");

        
        #line default
        #line hidden
        
        #line 84 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 84 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" other) { return this.Value == other.Value; }\r\n        #endregion\r\n\r\n        #reg" +
        "ion Comparison / IComparable<");

        
        #line default
        #line hidden
        
        #line 87 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 87 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">\r\n        public static bool operator ==(");

        
        #line default
        #line hidden
        
        #line 88 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 88 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 88 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 88 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Value == rhs.Value; }\r\n        public static bool operator !=(" +
        "");

        
        #line default
        #line hidden
        
        #line 89 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 89 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 89 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 89 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Value != rhs.Value; }\r\n        public static bool operator <(");

        
        #line default
        #line hidden
        
        #line 90 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 90 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 90 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 90 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Value < rhs.Value; }\r\n        public static bool operator >(");

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Value > rhs.Value; }\r\n        public static bool operator <=(");

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Value <= rhs.Value; }\r\n        public static bool operator >=(" +
        "");

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Value >= rhs.Value; }\r\n        public int /* IComparable<");

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> */ CompareTo(");

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" other) { return this.Value.CompareTo(other.Value); }\r\n        #endregion\r\n\r\n    " +
        "    #region Arithmetic\r\n        // Inner:\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator +(");

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs.Value + rhs.Value); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator -(");

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs.Value - rhs.Value); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator ++(");

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(q.Value + ");

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(One));

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator --(");

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(q.Value - ");

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(One));

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator -(");

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(-q.Value); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator *(");

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 104 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs * rhs.Value); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator *(");

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 105 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs.Value * rhs); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator /(");

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 106 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs.Value / rhs); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator /(");

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Value / rhs.Value; }\r\n        // Outer:\r\n");

        
        #line default
        #line hidden
        
        #line 109 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

        foreach (BinaryOperation o in u.OuterOperations)
        {
            string lhsValue = (o.Lhs.IsPredefined) ? "lhs" : "lhs.Value";
            string rhsValue = (o.Rhs.IsPredefined) ? "rhs" : "rhs.Value";
            string retValue = (o.Result.IsPredefined) ? 
                String.Format("{0} {1} {2}", lhsValue, o.Operation, rhsValue) :
                String.Format("new {0}({1} {2} {3})", o.Result.Name, lhsValue, o.Operation, rhsValue);

        
        #line default
        #line hidden
        
        #line 117 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("        public static ");

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(o.Result.Name));

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator ");

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(o.Operation));

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(o.Lhs.Name));

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(o.Rhs.Name));

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return ");

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(retValue));

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("; }\r\n");

        
        #line default
        #line hidden
        
        #line 119 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

        }

        
        #line default
        #line hidden
        
        #line 121 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("        #endregion\r\n\r\n        #region Formatting\r\n        public override string " +
        "ToString() { return ToString(");

        
        #line default
        #line hidden
        
        #line 125 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 125 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Format, null); }\r\n        public string ToString(string format) { return ToStrin" +
        "g(format, null); }\r\n        public string ToString(IFormatProvider fp) { return " +
        "ToString(");

        
        #line default
        #line hidden
        
        #line 127 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 127 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Format, fp); }\r\n        public string /* IFormattable */ ToString(string format," +
        " IFormatProvider fp)\r\n        {\r\n            return String.Format(fp, format ?? " +
        "");

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Format, Value, ");

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Symbol[0]);\r\n        }\r\n        #endregion\r\n\r\n        #region Statics\r\n        p" +
        "rivate static readonly Dimension s_sense = ");

        
        #line default
        #line hidden
        
        #line 135 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Sense));

        
        #line default
        #line hidden
        
        #line 135 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(";\r\n        private static readonly int s_family = ");

        
        #line default
        #line hidden
        
        #line 136 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Family));

        
        #line default
        #line hidden
        
        #line 136 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(";\r\n        private static ");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" s_factor = ");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Factor));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(";\r\n        private static string s_format = \"");

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Format));

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("\";\r\n        private static readonly SymbolCollection s_symbol = new SymbolCollect" +
        "ion(");

        
        #line default
        #line hidden
        
        #line 139 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Tags));

        
        #line default
        #line hidden
        
        #line 139 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(");\r\n\r\n        private static readonly ");

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" s_one = new ");

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(One));

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(");\r\n        private static readonly ");

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" s_zero = new ");

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Zero));

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(");\r\n        \r\n        public static Dimension Sense { get { return s_sense; } }\r\n" +
        "        public static int Family { get { return s_family; } }\r\n        public st" +
        "atic ");

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(@" Factor { get { return s_factor; } set { s_factor = value; } }
        public static string Format { get { return s_format; } set { s_format = value; } }
        public static SymbolCollection Symbol { get { return s_symbol; } }

        public static ");

        
        #line default
        #line hidden
        
        #line 150 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 150 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" One { get { return s_one; } }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 151 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 151 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" Zero { get { return s_zero; } }\r\n        #endregion\r\n    }\r\n");

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

    }

        
        #line default
        #line hidden
        
        #line 158 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

    void ProcessScale(ScaleType s)
    {
        string Scale = s.Name;
        string Unit = s.Unit.Name;
        string Offset = s.Offset.Code;
        string Family = (s.Prime == null) ? (__family++).ToString() : String.Format("{0}.Family", s.FamilyPrime().Name);
        string Format = s.Format;

        string Value = s.Unit.Factor.Value.Type.Name;
        string One = s.Unit.Factor.Value.Type.One.CSString();
        string Zero = s.Unit.Factor.Value.Type.Zero.CSString();

        if (!String.IsNullOrWhiteSpace(s.RefPoint))
        {

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("    [ScaleReferencePoint(\"");

        
        #line default
        #line hidden
        
        #line 174 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s.RefPoint));

        
        #line default
        #line hidden
        
        #line 174 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 175 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

        }

        
        #line default
        #line hidden
        
        #line 177 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("    public partial struct ");

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" : ILevel<");

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">, IEquatable<");

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">, IComparable<");

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">, IFormattable\r\n    {\r\n        #region Fields\r\n        private readonly ");

        
        #line default
        #line hidden
        
        #line 181 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 181 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" m_level;\r\n        #endregion\r\n\r\n        #region Properties\r\n        // instance " +
        "properties\r\n        public ");

        
        #line default
        #line hidden
        
        #line 186 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 186 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" Level { get { return m_level; } }\r\n        public ");

        
        #line default
        #line hidden
        
        #line 187 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 187 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" NormalizedLevel { get { return (m_level - ");

        
        #line default
        #line hidden
        
        #line 187 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 187 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Offset); } }\r\n        // ILevel<");

        
        #line default
        #line hidden
        
        #line 188 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 188 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> properties\r\n        IQuantity<");

        
        #line default
        #line hidden
        
        #line 189 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 189 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> ILevel<");

        
        #line default
        #line hidden
        
        #line 189 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 189 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">.Level { get { return Level; } }\r\n        IQuantity<");

        
        #line default
        #line hidden
        
        #line 190 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 190 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> ILevel<");

        
        #line default
        #line hidden
        
        #line 190 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 190 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">.NormalizedLevel { get { return NormalizedLevel; } }\r\n        #endregion\r\n\r\n    " +
        "    #region Constructor(s)\r\n        public ");

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 194 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" level)\r\n        {\r\n            m_level = level;\r\n        }\r\n        public ");

        
        #line default
        #line hidden
        
        #line 198 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 198 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 198 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 198 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" level) :\r\n            this(new ");

        
        #line default
        #line hidden
        
        #line 199 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 199 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(level))\r\n        {\r\n        }\r\n        #endregion\r\n\r\n        #region Conversions" +
        "\r\n        public static explicit operator ");

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(q); }\r\n        public static explicit operator ");

        
        #line default
        #line hidden
        
        #line 206 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 206 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 206 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 206 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 206 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 206 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(q); }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 208 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

        foreach (MeasureType x in s.Relatives())
        {
            string Relative = ((ScaleType)x).Name;

        
        #line default
        #line hidden
        
        #line 212 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("        public static explicit operator ");

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Relative));

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("((");

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(")(q.NormalizedLevel) + ");

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Offset); }\r\n");

        
        #line default
        #line hidden
        
        #line 214 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

        }

        
        #line default
        #line hidden
        
        #line 216 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 218 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 218 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" From(ILevel<");

        
        #line default
        #line hidden
        
        #line 218 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 218 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(@"> q)
        {
            /* The following 2 statements might be required if you have two (or more) scale families derived from the same units
               but bound to different reference levels. E.g. two families of temperature scales: one with common reference level
               set to absolute zero and the other one with common reference level set to water freeze point.
               This is rather unlikely and the statements are commented out to avoid (likely) superfluous checks. */
               
            // Scale<");

        
        #line default
        #line hidden
        
        #line 225 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 225 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> source = new Scale<");

        
        #line default
        #line hidden
        
        #line 225 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Value));

        
        #line default
        #line hidden
        
        #line 225 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">(q);\r\n            // if (source.Family != ");

        
        #line default
        #line hidden
        
        #line 226 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 226 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Family) throw new InvalidOperationException(String.Format(\"Cannot convert \\\"{0}\\" +
        "\" to \\\"");

        
        #line default
        #line hidden
        
        #line 226 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 226 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("\\\"\", q.GetType().Name));\r\n\r\n            return new ");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".From(q.NormalizedLevel) + ");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Offset);\r\n        }\r\n        #endregion\r\n\r\n        #region IObject / IEquatable<" +
        "");

        
        #line default
        #line hidden
        
        #line 232 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 232 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">\r\n        public override int GetHashCode() { return m_level.GetHashCode(); }\r\n " +
        "       public override bool /* IObject */ Equals(object obj) { return (obj is ");

        
        #line default
        #line hidden
        
        #line 234 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 234 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(") && Equals((");

        
        #line default
        #line hidden
        
        #line 234 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 234 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(")obj); }\r\n        public bool /* IEquatable<");

        
        #line default
        #line hidden
        
        #line 235 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 235 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> */ Equals(");

        
        #line default
        #line hidden
        
        #line 235 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 235 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" other) { return this.Level == other.Level; }\r\n        #endregion\r\n\r\n        #reg" +
        "ion Comparison / IComparable<");

        
        #line default
        #line hidden
        
        #line 238 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 238 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(">\r\n        public static bool operator ==(");

        
        #line default
        #line hidden
        
        #line 239 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 239 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 239 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 239 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Level == rhs.Level; }\r\n        public static bool operator !=(" +
        "");

        
        #line default
        #line hidden
        
        #line 240 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 240 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 240 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 240 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Level != rhs.Level; }\r\n        public static bool operator <(");

        
        #line default
        #line hidden
        
        #line 241 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 241 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 241 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 241 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Level < rhs.Level; }\r\n        public static bool operator >(");

        
        #line default
        #line hidden
        
        #line 242 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 242 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 242 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 242 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Level > rhs.Level; }\r\n        public static bool operator <=(");

        
        #line default
        #line hidden
        
        #line 243 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 243 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 243 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 243 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Level <= rhs.Level; }\r\n        public static bool operator >=(" +
        "");

        
        #line default
        #line hidden
        
        #line 244 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 244 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 244 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 244 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return lhs.Level >= rhs.Level; }\r\n        public int /* IComparable<");

        
        #line default
        #line hidden
        
        #line 245 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 245 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("> */ CompareTo(");

        
        #line default
        #line hidden
        
        #line 245 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 245 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" other) { return this.Level.CompareTo(other.Level); }\r\n        #endregion\r\n\r\n    " +
        "    #region Arithmetic\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator +(");

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs.Level + rhs); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator +(");

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 250 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs + rhs.Level); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator -(");

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return new ");

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 251 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(lhs.Level - rhs); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 252 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 252 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator -(");

        
        #line default
        #line hidden
        
        #line 252 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 252 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" lhs, ");

        
        #line default
        #line hidden
        
        #line 252 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 252 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" rhs) { return (lhs.Level - rhs.Level); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 253 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 253 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator -(");

        
        #line default
        #line hidden
        
        #line 253 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 253 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return new ");

        
        #line default
        #line hidden
        
        #line 253 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 253 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(-q.Level); }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 254 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 254 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator ++(");

        
        #line default
        #line hidden
        
        #line 254 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 254 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return q + ");

        
        #line default
        #line hidden
        
        #line 254 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 254 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".One; }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 255 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 255 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" operator --(");

        
        #line default
        #line hidden
        
        #line 255 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 255 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" q) { return q - ");

        
        #line default
        #line hidden
        
        #line 255 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 255 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".One; }\r\n        #endregion\r\n\r\n        #region Formatting\r\n        public overrid" +
        "e string ToString() { return ToString(");

        
        #line default
        #line hidden
        
        #line 259 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 259 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Format, null); }\r\n        public string ToString(string format) { return ToStrin" +
        "g(format, null); }\r\n        public string ToString(IFormatProvider fp) { return " +
        "ToString(");

        
        #line default
        #line hidden
        
        #line 261 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 261 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Format, fp); }\r\n        public string /* IFormattable */ ToString(string format," +
        " IFormatProvider fp)\r\n        {\r\n            return m_level.ToString(format ?? ");

        
        #line default
        #line hidden
        
        #line 264 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 264 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(".Format, fp);\r\n        }\r\n        #endregion\r\n\r\n        #region Statics\r\n        " +
        "private static readonly ");

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" s_offset = new ");

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Offset));

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(");  // offset to ");

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s.RefPointNormalized));

        
        #line default
        #line hidden
        
        #line 269 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("\r\n        private static readonly int s_family = ");

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Family));

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(";\r\n        private static string s_format = \"");

        
        #line default
        #line hidden
        
        #line 271 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Format));

        
        #line default
        #line hidden
        
        #line 271 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("\";\r\n        private static readonly ");

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" s_zero = new ");

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Zero));

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(");\r\n        \r\n        public static ");

        
        #line default
        #line hidden
        
        #line 274 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Unit));

        
        #line default
        #line hidden
        
        #line 274 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" Offset { get { return s_offset; } }\r\n        public static int Family { get { re" +
        "turn s_family; } }\r\n        public static string Format { get { return s_format;" +
        " } set { s_format = value; } }\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 277 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Scale));

        
        #line default
        #line hidden
        
        #line 277 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"
this.Write(" Zero { get { return s_zero; } }\r\n        #endregion\r\n    }\r\n");

        
        #line default
        #line hidden
        
        #line 280 "C:\Users\Marek\Documents\_git\MAN\UnitsOfMeasurement\Demo\UnitsOfMeasurement\RuntimeLoader\Generator.tt"

    }

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public class GeneratorBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
